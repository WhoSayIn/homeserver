version: "3"

networks:
  internal:

services:
  swag:
    image: linuxserver/swag
    container_name: swag
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./swag:/config
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - EMAIL=${EMAIL}
      - URL=${DUCKDNS_DOMAIN}
        #- SUBDOMAINS=wildcard
      - VALIDATION=duckdns
      - DUCKDNSTOKEN=${DUCKDNS_TOKEN}
    ports:
      - 80:80
      - 443:443

  organizr:
    container_name: organizr
    hostname: organizr
    image: organizr/organizr
    restart: unless-stopped
    networks:
      - internal
    ports:
      - 88:80
        #- 80:80
    volumes:
      - './organizr:/config'
    environment:
      - fpm=true
      - branch=v2-master
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 9000:9000
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./nextcloud/config:/config
      - ${NEXTCLOUD_PATH}:/data
    ports:
      - 447:443
        #- 443:443
    restart: unless-stopped

  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - SERVERURL=${SERVER_EXTERNAL_URL}
      - SERVERPORT=51820
      - PEERS=3
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  airconnect:
    container_name: airconnect
    image: 1activegeek/airconnect
    network_mode: host
    restart: unless-stopped

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    network_mode: host
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf
    restart: unless-stopped

  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
    volumes:
      - ./plex:/config
      - ./plex/transc:/transcode
      - ${TV_SHOW_PATH}:/tv
      - ${MOVIE_PATH}:/movies
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    networks:
      - internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sonarr:/config
      - ${TV_SHOW_PATH}:/tv
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    networks:
      - internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr:/config
      - ${MOVIE_PATH}:/movies
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - internal
    volumes:
      - ./bazarr:/config
      - ${MOVIE_PATH}:/movies
      - ${TV_SHOW_PATH}:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    networks:
      - internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TRANSMISSION_WEB_HOME=/combustion-release/
      - USER=${TRANSMISSION_USER} # sonarr&radarr don't work w/o credentials?
      - PASS=${TRANSMISSION_PASSWORD} # sonarr&radarr don't work w/o credentials?

    volumes:
      - ./transmission/config:/config
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    networks:
      - internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - internal
    volumes:
      - ./jackett:/config
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped


  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:latest"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    depends_on:
      -  mariadb

  mariadb:
    image: mariadb/server:10.3
    container_name: mariadb
    restart: unless-stopped
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ha
      MYSQL_USER: ${HA_MYSQL_USER}
      MYSQL_PASSWORD: ${HA_MYSQL_PASSWORD}
    volumes:
      - ./mariadb:/var/lib/mysql
    ports:
      - 3306:3306

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - SUBDOMAINS=${DUCKDNS_DOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}
      - LOG_FILE=false
    volumes:
      - ./duckdns:/config
    restart: unless-stopped

  octoprint:
    image: octoprint/octoprint
    restart: unless-stopped
    ports:
      - 808:80
    # devices:
    # use `python -m serial.tools.miniterm` to see what the name is of the printer, this requires pyserial
    #  - /dev/ttyACM0:/dev/ttyACM0
    #  - /dev/video0:/dev/video0
    volumes:
     - ./octoprint:/octoprint

